{"version":3,"file":"layout-nav-list.component.js","sourceRoot":"","sources":["../../../../../src/platform/core/layout/layout-nav-list/layout-nav-list.component.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAE1F,OAAO,EAAE,SAAS,EAAyB,MAAM,mBAAmB,CAAC;AAErE,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAOxD,IAAa,wBAAwB;IAwFnC,kCACoB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAhE9C;;;;;WAKG;QACa,UAAK,GAAW,SAAS,CAAC;QAE1C;;;;;;;;WAQG;QACY,SAAI,GAA6B,MAAM,CAAC;QAEvD;;;;;;;;WAQG;QACc,WAAM,GAAY,IAAI,CAAC;QAExC;;;;;;;WAOG;QACoB,iBAAY,GAAW,OAAO,CAAC;QAEtD;;;;;WAKG;QACuB,oBAAe,GAAW,GAAG,CAAC;IAkBN,CAAC;IAbnD,sBAAI,4DAAsB;QAH1B;;WAEG;aACH;YACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAMD,sBAAI,kDAAY;QAJhB;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC;QAC9B,CAAC;;;OAAA;IAKD;;OAEG;IACI,yCAAM,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAChC,CAAC;IAED;;OAEG;IACI,uCAAI,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC9B,CAAC;IAED;;OAEG;IACI,wCAAK,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,kDAAe,GAAf;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAEH,+BAAC;AAAD,CAAC,AAvHD,IAuHC;AArHuB;IAArB,SAAS,CAAC,SAAS,CAAC;8BAAW,SAAS;0DAAC;AAOnB;IAAtB,KAAK,CAAC,cAAc,CAAC;;8DAAsB;AAM7B;IAAd,KAAK,CAAC,MAAM,CAAC;;sDAAc;AAQb;IAAd,KAAK,CAAC,MAAM,CAAC;;sDAAc;AAQZ;IAAf,KAAK,CAAC,OAAO,CAAC;;uDAA2B;AAW3B;IAAd,KAAK,CAAC,MAAM,CAAC;;sDAAyC;AAWtC;IAAhB,KAAK,CAAC,QAAQ,CAAC;;wDAAwB;AAUjB;IAAtB,KAAK,CAAC,cAAc,CAAC;;8DAAgC;AAQ5B;IAAzB,KAAK,CAAC,iBAAiB,CAAC;;iEAA+B;AAvE7C,wBAAwB;IALpC,SAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,SAAS,EAAE,CAAC,kCAAkC,CAAE;QAChD,WAAW,EAAE,kCAAkC;KAChD,CAAC;IAyFa,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,UAAU,CAAC,cAAM,OAAA,iBAAiB,EAAjB,CAAiB,CAAC,CAAC,CAAA;qCACvC,iBAAiB;GAzFnC,wBAAwB,CAuHpC;SAvHY,wBAAwB","sourcesContent":["import { Component, Input, ViewChild, forwardRef, Optional, Inject } from '@angular/core';\n\nimport { MdSidenav, MdSidenavToggleResult } from '@angular/material';\n\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss' ],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent {\n\n  @ViewChild(MdSidenav) _sideNav: MdSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MdSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MdSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\" (\"%\" is not well supported yet as stated in the layout docs)\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '350px';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined logo, icon, toolbar title route\n   * defaults to '/'\n   */\n  @Input('navigationRoute') navigationRoute: string = '/';\n\n  /**\n   * Checks if there is a [TdLayoutComponent] as parent.\n   */\n  get isMainSidenavAvailable(): boolean {\n    return !!this._layout;\n  }\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutComponent))\n              private _layout: TdLayoutComponent) { }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MdSidenavToggleResult> {\n    return this._sideNav.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MdSidenavToggleResult> {\n    return this._sideNav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MdSidenavToggleResult> {\n    return this._sideNav.close();\n  }\n\n  /**\n   * If main sidenav is available, it will open the sidenav of the parent [TdLayoutComponent].\n   */\n  openMainSidenav(): void {\n    this._layout.open();\n  }\n\n}\n"]}